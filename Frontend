import backend as bk
import tkinter as tk
import time
import datetime
from datetime import date
import importlib
import warnings
warnings.filterwarnings("ignore", message = "Reloaded modules: backend") 

importlib.reload(bk)

class mainpage:
    
    def __init__(self, root):
        
        var1 = tk.IntVar(root, value = 0)
        
        ##self.buttonactivate.pack()
        self.onButton = tk.Button(root, text = 'Activate', command = var1.set(1)) #button tp
        self.onButton.pack(side = "bottom")
        self.onButton['command'] = bk.Inputs.Take_input_manual(self, var1)
        
        bk.Inputs.Take_input_manual(self, var1)
        
        self.label_temp = tk.Label(root, text = bk.Forecast(), bg = 'Red', fg = 'White', justify = tk.CENTER)
        self.label_temp.pack(side = "left")
        
        hour_string=tk.StringVar()
        min_string=tk.StringVar()
        f = ('Times', 20)
        
        self.min_sb = tk.Spinbox(root,from_=0,to=23,wrap=True,textvariable=hour_string,width=2,state="readonly",font=f,justify=tk.CENTER)
        
        self.sec_hour =tk.Spinbox(root,from_=0,to=59,wrap=True,textvariable=min_string,font=f,width=2,justify=tk.CENTER)
        
        self.min_sb.pack()
        self.sec_hour.pack()
        
        a= self.min_sb.get()
        b = self.sec_hour.get()
        self.actionBtn =tk.Button(root,text="Set on time",padx=10,pady=10,command=bk.Inputs.ManualSetTime(a,b))
        self.actionBtn.pack(pady=10)
        
        
        self.statusLabel = tk.Label(root, text = bk.OperatingOutputs.PassToDevice(self, var1) )
        self.statusLabel.pack()
        
    
                        


        
        
            



if __name__ == "__main__":
    root = tk.Tk()
    a = mainpage(root)
    root.mainloop()
